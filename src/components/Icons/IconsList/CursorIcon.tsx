import React from 'react';
import { TCursorVariants } from '../types';


const iconVariants = {
  hover: ({ fill = 'white', stroke = '#101828',  width = 20, height = 22, ...rest }: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={width}
      height={height}
      viewBox="0 0 20 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g filter="url(#filter0_d_4115_30758)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M5.83056 14.4731C5.55268 14.0969 5.21512 13.3277 4.61435 12.394C4.27384 11.8658 3.42944 10.8713 3.17798 10.3662C2.95978 9.91979 2.98327 9.71964 3.03512 9.34972C3.1271 8.69162 3.75722 8.17918 4.42942 8.24834C4.93724 8.29969 5.36776 8.65913 5.75522 8.99866C5.98907 9.20301 6.27674 9.60017 6.44992 9.82443C6.60941 10.0298 6.64855 10.1147 6.8188 10.3578C7.04384 10.6795 7.11429 10.8388 7.02819 10.4846C6.95872 9.96486 6.84522 9.07726 6.68084 8.29235C6.5556 7.69713 6.52526 7.60386 6.40589 7.14696C6.27967 6.66072 6.2151 6.32014 6.0967 5.80456C6.01451 5.43988 5.86677 4.6948 5.82665 4.27562C5.77088 3.7024 5.74152 2.76765 6.08496 2.33799C6.35404 2.00161 6.97144 1.89996 7.35401 2.10745C7.85498 2.37886 8.13971 3.15852 8.26985 3.46976C8.5037 4.02936 8.64851 4.67593 8.77473 5.52476C8.93519 6.60518 9.23069 8.10477 9.24047 8.4202C9.26395 8.03351 9.17394 7.21927 9.23656 6.8483C9.29331 6.51191 9.55749 6.12103 9.88821 6.01519C10.168 5.92612 10.4958 5.89363 10.7845 5.95756C11.0907 6.02462 11.4136 6.25936 11.534 6.48048C11.8882 7.13439 11.895 8.4705 11.9097 8.39924C11.9938 8.00522 11.9792 7.11133 12.1876 6.73931C12.3246 6.4941 12.6739 6.27298 12.8598 6.23735C13.1474 6.18286 13.5007 6.1661 13.803 6.22897C14.0466 6.28032 14.3764 6.59051 14.4654 6.73931C14.6787 7.0998 14.8 8.11944 14.8362 8.47679C14.8509 8.62455 14.9086 8.066 15.1229 7.70551C15.5202 7.03588 16.9262 6.90594 16.98 8.37514C17.0045 9.06049 16.9996 9.02905 16.9996 9.49014C16.9996 10.0319 16.9879 10.3578 16.9605 10.7498C16.9301 11.1689 16.846 12.1163 16.7237 12.5753C16.6395 12.8907 16.3607 13.6001 16.0857 14.0256C16.0857 14.0256 15.0349 15.3355 14.9204 15.9255C14.8049 16.5144 14.8431 16.5186 14.8206 16.9368C14.7981 17.3538 14.939 17.903 14.939 17.903C14.939 17.903 14.1543 18.0119 13.7316 17.9396C13.349 17.8736 12.8754 17.0583 12.7531 16.8089C12.5848 16.4652 12.2257 16.5312 12.0858 16.7848C11.8657 17.1862 11.3921 17.9061 11.0575 17.9512C10.4039 18.0392 9.04772 17.9836 7.98609 17.9721C7.98609 17.9721 8.16711 16.9127 7.76399 16.549C7.46556 16.2776 6.95187 15.7274 6.64464 15.4382L5.83056 14.4731Z"
          fill={fill}
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M5.83056 14.4731C5.55268 14.0969 5.21512 13.3277 4.61435 12.394C4.27384 11.8658 3.42944 10.8713 3.17798 10.3662C2.95978 9.91979 2.98327 9.71964 3.03512 9.34972C3.1271 8.69162 3.75722 8.17918 4.42942 8.24834C4.93724 8.29969 5.36776 8.65913 5.75522 8.99866C5.98907 9.20301 6.27674 9.60017 6.44992 9.82443C6.60941 10.0298 6.64855 10.1147 6.8188 10.3578C7.04384 10.6795 7.11429 10.8388 7.02819 10.4846C6.95872 9.96486 6.84522 9.07726 6.68084 8.29235C6.5556 7.69713 6.52526 7.60386 6.40589 7.14696C6.27967 6.66072 6.2151 6.32014 6.0967 5.80456C6.01451 5.43988 5.86677 4.6948 5.82665 4.27562C5.77088 3.7024 5.74152 2.76765 6.08496 2.33799C6.35404 2.00161 6.97144 1.89996 7.35401 2.10745C7.85498 2.37886 8.13971 3.15852 8.26985 3.46976C8.5037 4.02936 8.64851 4.67593 8.77473 5.52476C8.93519 6.60518 9.23069 8.10477 9.24047 8.4202C9.26395 8.03351 9.17394 7.21927 9.23656 6.8483C9.29331 6.51191 9.55749 6.12103 9.88821 6.01519C10.168 5.92612 10.4958 5.89363 10.7845 5.95756C11.0907 6.02462 11.4136 6.25936 11.534 6.48048C11.8882 7.13439 11.895 8.4705 11.9097 8.39924C11.9938 8.00522 11.9792 7.11133 12.1876 6.73931C12.3246 6.4941 12.6739 6.27298 12.8598 6.23735C13.1474 6.18286 13.5007 6.1661 13.803 6.22897C14.0466 6.28032 14.3764 6.59051 14.4654 6.73931C14.6787 7.0998 14.8 8.11944 14.8362 8.47679C14.8509 8.62455 14.9086 8.066 15.1229 7.70551C15.5202 7.03588 16.9262 6.90594 16.98 8.37514C17.0045 9.06049 16.9996 9.02905 16.9996 9.49014C16.9996 10.0319 16.9879 10.3578 16.9605 10.7498C16.9301 11.1689 16.846 12.1163 16.7237 12.5753C16.6395 12.8907 16.3607 13.6001 16.0857 14.0256C16.0857 14.0256 15.0349 15.3355 14.9204 15.9255C14.8049 16.5144 14.8431 16.5186 14.8206 16.9368C14.7981 17.3538 14.939 17.903 14.939 17.903C14.939 17.903 14.1543 18.0119 13.7316 17.9396C13.349 17.8736 12.8754 17.0583 12.7531 16.8089C12.5848 16.4652 12.2257 16.5312 12.0858 16.7848C11.8657 17.1862 11.3921 17.9061 11.0575 17.9512C10.4039 18.0392 9.04772 17.9836 7.98609 17.9721C7.98609 17.9721 8.16711 16.9127 7.76399 16.549C7.46556 16.2776 6.95187 15.7274 6.64464 15.4382L5.83056 14.4731Z"
          stroke={stroke}
          strokeWidth="0.75"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </g>
      <defs>
        <filter id="filter0_d_4115_30758" x="0.625122" y="0.625" width="18.7499" height="20.75" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
          <feFlood floodOpacity="0" result="BackgroundImageFix"/>
          <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
          <feOffset dy="1"/>
          <feGaussianBlur stdDeviation="1"/>
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.24 0"/>
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_4115_30758"/>
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_4115_30758" result="shape"/>
        </filter>
      </defs>
    </svg>
  ),
  drag: ({ fill = 'fill', stroke = '#101828', width = 19, height = 18, ...rest }: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={width}
      height={height}
      viewBox="0 0 19 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g filter="url(#filter0_d_4115_30764)">
        <path
          fillRule="evenodd"
          clipRule="evenodd" d="M5.67273 2.8478C6.15998 2.66244 7.12129 2.77595 7.37506 3.34036C7.59128 3.82147 7.77704 4.63269 7.7872 4.45982C7.81156 4.07556 7.76283 3.24456 7.92627 2.81031C8.04503 2.49374 8.27851 2.19591 8.62263 2.09074C8.91193 2.00118 9.25199 1.96994 9.55246 2.03346C9.87019 2.10011 10.2042 2.33233 10.329 2.5531C10.6965 3.20186 10.7026 4.53063 10.7198 4.45982C10.7848 4.17657 10.7909 3.18 11.0071 2.81031C11.1502 2.56559 11.5116 2.34691 11.7045 2.3115C12.0029 2.25735 12.3704 2.24069 12.683 2.30317C12.9358 2.3542 13.2779 2.6614 13.3703 2.81031C13.5926 3.16854 13.7174 4.18074 13.755 4.53688C13.7712 4.68371 13.8301 4.12763 14.0524 3.77044C14.4646 3.10502 15.9243 2.97589 15.9791 4.43587C16.0055 5.11692 15.9994 5.08568 15.9994 5.54387C15.9994 6.08122 15.9872 6.40612 15.9588 6.79559C15.9283 7.21109 15.841 8.15352 15.7142 8.60963C15.6269 8.92308 15.3375 9.62808 15.0513 10.0509C15.0513 10.0509 13.9611 11.3526 13.8423 11.9378C13.7235 12.5241 13.7631 12.5283 13.7388 12.9427C13.7154 13.3582 13.8616 13.9039 13.8616 13.9039C13.8616 13.9039 13.0485 14.0122 12.6089 13.9393C12.212 13.8747 11.7207 13.0646 11.5938 12.8167C11.4192 12.4751 11.0467 12.5408 10.9015 12.7928C10.6742 13.1916 10.1818 13.907 9.83568 13.9518C9.15657 14.0393 7.74964 13.983 6.64825 13.9726C6.64825 13.9726 6.83604 12.9198 6.41782 12.5585C6.10821 12.2877 5.57528 11.742 5.25654 11.4546L4.41197 10.4955C4.1247 10.1206 3.39484 9.52811 3.1502 8.42843C2.93398 7.45372 2.9553 6.97574 3.18776 6.58523C3.42326 6.18848 3.86788 5.97187 4.05466 5.93438C4.2658 5.89065 4.75711 5.89377 4.94287 5.99895C5.16924 6.12704 5.2606 6.16452 5.43824 6.40612C5.67172 6.72582 5.75496 6.88098 5.65446 6.53212C5.57731 6.25929 5.3276 5.91252 5.21391 5.52201C5.10326 5.14608 4.80685 4.54001 4.82817 3.9329C4.83629 3.70276 4.93272 3.13001 5.67273 2.8478Z"
          fill={fill}
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd" d="M5.67273 2.8478C6.15998 2.66244 7.12129 2.77595 7.37506 3.34036C7.59128 3.82147 7.77704 4.63269 7.7872 4.45982C7.81156 4.07556 7.76283 3.24456 7.92627 2.81031C8.04503 2.49374 8.27851 2.19591 8.62263 2.09074C8.91193 2.00118 9.25199 1.96994 9.55246 2.03346C9.87019 2.10011 10.2042 2.33233 10.329 2.5531C10.6965 3.20186 10.7026 4.53063 10.7198 4.45982C10.7848 4.17657 10.7909 3.18 11.0071 2.81031C11.1502 2.56559 11.5116 2.34691 11.7045 2.3115C12.0029 2.25735 12.3704 2.24069 12.683 2.30317C12.9358 2.3542 13.2779 2.6614 13.3703 2.81031C13.5926 3.16854 13.7174 4.18074 13.755 4.53688C13.7712 4.68371 13.8301 4.12763 14.0524 3.77044C14.4646 3.10502 15.9243 2.97589 15.9791 4.43587C16.0055 5.11692 15.9994 5.08568 15.9994 5.54387C15.9994 6.08122 15.9872 6.40612 15.9588 6.79559C15.9283 7.21109 15.841 8.15352 15.7142 8.60963C15.6269 8.92308 15.3375 9.62808 15.0513 10.0509C15.0513 10.0509 13.9611 11.3526 13.8423 11.9378C13.7235 12.5241 13.7631 12.5283 13.7388 12.9427C13.7154 13.3582 13.8616 13.9039 13.8616 13.9039C13.8616 13.9039 13.0485 14.0122 12.6089 13.9393C12.212 13.8747 11.7207 13.0646 11.5938 12.8167C11.4192 12.4751 11.0467 12.5408 10.9015 12.7928C10.6742 13.1916 10.1818 13.907 9.83568 13.9518C9.15657 14.0393 7.74964 13.983 6.64825 13.9726C6.64825 13.9726 6.83604 12.9198 6.41782 12.5585C6.10821 12.2877 5.57528 11.742 5.25654 11.4546L4.41197 10.4955C4.1247 10.1206 3.39484 9.52811 3.1502 8.42843C2.93398 7.45372 2.9553 6.97574 3.18776 6.58523C3.42326 6.18848 3.86788 5.97187 4.05466 5.93438C4.2658 5.89065 4.75711 5.89377 4.94287 5.99895C5.16924 6.12704 5.2606 6.16452 5.43824 6.40612C5.67172 6.72582 5.75496 6.88098 5.65446 6.53212C5.57731 6.25929 5.3276 5.91252 5.21391 5.52201C5.10326 5.14608 4.80685 4.54001 4.82817 3.9329C4.83629 3.70276 4.93272 3.13001 5.67273 2.8478Z"
          stroke={stroke}
          strokeWidth="0.75"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </g>
      <defs>
        <filter id="filter0_d_4115_30764" x="0.625" y="0.625" width="17.75" height="16.75" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
          <feFlood floodOpacity="0" result="BackgroundImageFix"/>
          <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
          <feOffset dy="1"/>
          <feGaussianBlur stdDeviation="1"/>
          <feColorMatrix type="matrix" values="0 0 0 0 0.027451 0 0 0 0 0.12549 0 0 0 0 0.239216 0 0 0 0.24 0"/>
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_4115_30764"/>
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_4115_30764" result="shape"/>
        </filter>
      </defs>
    </svg>
  ),
  arrow: ({ fill= '#101828', stroke = 'white', width = 18, height = 21, ...rest }: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={width}
      height={height}
      viewBox="0 0 18 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g filter="url(#filter0_d_4115_30770)">
        <path d="M5 14L4 3L13 9L9 10L12.5 15L11 16L7.5 11L5 14Z" fill={fill} />
        <path
          d="M4.50205 14.0453L4.61134 15.2474L5.38411 14.3201L7.46543 11.8225L10.5904 16.2867L10.8707 16.6871L11.2773 16.416L12.7774 15.416L13.2029 15.1323L12.9096 14.7133L9.82647 10.3088L13.1213 9.48507L14.2178 9.21094L13.2774 8.58397L4.27735 2.58397L3.40739 2.004L3.50205 3.04527L4.50205 14.0453Z"
          stroke={stroke} />
      </g>
      <defs>
        <filter id="filter0_d_4115_30770" x="0.814758" y="0.00805664" width="16.6208" height="20.3662" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
          <feFlood floodOpacity="0" result="BackgroundImageFix"/>
          <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
          <feOffset dy="1"/>
          <feGaussianBlur stdDeviation="1"/>
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.24 0"/>
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_4115_30770"/>
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_4115_30770" result="shape"/>
        </filter>
      </defs>
    </svg>
  ),
};

interface ICursorIcon extends React.SVGProps<SVGSVGElement> {
  variant?: TCursorVariants,
}

export default function CursorIcon ({
  variant = 'hover',
  ...rest
}: ICursorIcon) {
  return iconVariants[variant]({ ...rest });
}
